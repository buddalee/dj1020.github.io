<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[閃亮亮大師之路]]></title>
  <subtitle><![CDATA[程式學習心得筆記]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://blog.dj1020.net/"/>
  <updated>2015-09-28T08:30:28.000Z</updated>
  <id>http://blog.dj1020.net/</id>
  
  <author>
    <name><![CDATA[閃亮亮dj]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Hexo 發佈到 GitHub 的方式，設 CNAME]]></title>
    <link href="http://blog.dj1020.net/Hexo-%E7%99%BC%E4%BD%88%E5%88%B0-GitHub-%E7%9A%84%E6%96%B9%E5%BC%8F%EF%BC%8C%E8%A8%AD-CNAME/"/>
    <id>http://blog.dj1020.net/Hexo-發佈到-GitHub-的方式，設-CNAME/</id>
    <published>2015-09-28T08:00:16.000Z</published>
    <updated>2015-09-28T08:30:28.000Z</updated>
    <content type="html"><![CDATA[<h2 id="假設你已經買好_Godaddy_的網域，而且設定好_CNAME">假設你已經買好 Godaddy 的網域，而且設定好 CNAME</h2><p>簡單提一下流程，如果你買的網域叫 <code>super123.com</code><br>登入 Godaddy，<br>在你的網域按 <code>Manage</code> 按鈕，<br>到 <code>DNS Zone File</code>，<br>然後 <code>Add Record</code>，<br>選 <code>CNAME</code>，<br>Host 欄填 <code>blog</code> 的話，你的要打開部落格的網址就會變成 <a href="http://blog.super123.com" target="_blank" rel="external">http://blog.super123.com</a><br>Points To 欄填 <code>{username}.github.io</code> 把 {username} 換成你的 github 帳號，<br>完成後記得 <code>Save Changes</code>。</p>
<p>放圖</p>
<h2 id="踩雷心得">踩雷心得</h2><p>我按照 <a href="https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/" target="_blank" rel="external">GitHub 官網指示</a>，加了一個叫 <code>CNAME</code> 的檔案在 master branch 的根目錄裡，檔案內容只有一行：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blog<span class="class">.dj1020</span><span class="class">.net</span></span><br></pre></td></tr></table></figure></p>
<p>也就是我想要的部落格網域，所以別人就可以連到 <a href="http://blog.dj1020.net">http://blog.dj1020.net</a> 看到我的部落格。問題是，這個檔案是由我手動在 GitHub 上產生，但是 Hexo 並不知道，所以一旦 Hexo deploy 之後，這個檔案就被蓋掉了。出現這樣的畫面：</p>
<p>放圖</p>
<h2 id="安裝_hexo-generator-cname">安裝 hexo-generator-cname</h2><p><code>$ npm install hexo-generator-cname --save</code></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="假設你已經買好_Godaddy_的網域，而且設定好_CNAME">假設你已經買好 Godaddy 的網域，而且設定好 CNAME</h2><p>簡單提一下流程，如果你買的網域叫 <code>super123.com</code><br>登入 Godaddy，<br]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[[筆記] PHP也有Day #19 - 從實例學習設計模式 by 大澤木小鐵]]></title>
    <link href="http://blog.dj1020.net/PHP%E4%B9%9F%E6%9C%89Day-19-%E5%BE%9E%E5%AF%A6%E4%BE%8B%E5%AD%B8%E7%BF%92%E8%A8%AD%E8%A8%88%E6%A8%A1%E5%BC%8F-by-%E5%A4%A7%E6%BE%A4%E6%9C%A8%E5%B0%8F%E9%90%B5/"/>
    <id>http://blog.dj1020.net/PHP也有Day-19-從實例學習設計模式-by-大澤木小鐵/</id>
    <published>2015-09-24T10:14:37.000Z</published>
    <updated>2015-09-25T08:20:30.000Z</updated>
    <content type="html"><![CDATA[<h2 id="About_Jace_Ju_大澤木小鐵">About Jace Ju 大澤木小鐵</h2><p>KKBOX 網站工程師<br>為了訓練公司內部人員設計模式的基本教學</p>
<h2 id="Agenda">Agenda</h2><ul>
<li>OO 常見問題</li>
<li>SOLID 原則</li>
<li>該用什麼模式</li>
<li>應用「設計模式」應該注意什麼</li>
</ul>
<h2 id="OO_常見問題">OO 常見問題</h2><ol>
<li><p>萬能類別</p>
<blockquote>
<p>  兩個人要合作一個案子，寫同一段 Code 時 Conflict 解不完</p>
</blockquote>
</li>
<li><p>臭蟲製造機</p>
<blockquote>
<p>  需求一直變，每改一個地方就有可能出現 bug</p>
</blockquote>
</li>
<li><p>繼承用起來很不順</p>
<blockquote>
<p>  想要繼承 A 又繼承 B，為什麼不能兩邊功能都拿來用？</p>
</blockquote>
</li>
<li><p>類別做太多事</p>
<blockquote>
<p>  每次要用就要重頭再看一次</p>
</blockquote>
</li>
<li><p>給多用少</p>
<blockquote>
<p>  我只是想用某個 Class 中的一個 method 而已呀</p>
</blockquote>
</li>
<li><p>根深蒂固</p>
<blockquote>
<p>  例如用 mysql() 來連資料庫，但之後要改 PDO 沒辦法改，改到死。</p>
</blockquote>
</li>
</ol>
<h2 id="學物件導向就要先學設計模式？">學物件導向就要先學設計模式？</h2><blockquote>
<p>對，也不對，看的高度不同而已。<br>建議先了解物件導向設計的精神和原則！ SOLLID</p>
</blockquote>
<h2 id="SOLID_是…">SOLID 是…</h2><h3 id="1-_SRP_-_單一職責原則_Single_Responsibility_Principle"><strong>1. SRP - 單一職責原則 Single Responsibility Principle</strong></h3><p>讓類別只有一個改變的原因，只有一種職責，一個類別只負責一件事。<br>Ex: 抓取資料 + 輸出 HTML -&gt; 兩件事，應該給兩個類別去處理</p>
<h4 id="秘訣">秘訣</h4><blockquote>
<ul>
<li>關注點分離，模組切割 - ex: 購物車模組(加入購物車、結帳)、訂單模組(建訂單、取訂單)</li>
<li>依 Domain 來拆開類別的職責</li>
<li>注意切太細的話會有類別太多的問題，要注意 autoload 的效能問題</li>
</ul>
</blockquote>
<h4 id="實例">實例</h4><ul>
<li><p>第一次寫購物車就把所有功能塞在一個 Class 裡。</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cart</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Add item</span></span><br><span class="line">    <span class="comment">// Remove item</span></span><br><span class="line">    <span class="comment">// Get all items</span></span><br><span class="line">    <span class="comment">// 設定訂單資訊       -&gt; 訂單的事</span></span><br><span class="line">    <span class="comment">// 取得 ATM 付款資訊  -&gt; 訂單的事</span></span><br><span class="line">    <span class="comment">// 設定物流          -&gt; 訂單的事</span></span><br><span class="line">    <span class="comment">// 儲存訂單          -&gt; 訂單的事</span></span><br><span class="line">    <span class="comment">// 寄送訂單確認信     -&gt; 訂單or寄信的事</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>用 SRP 原則來重構 Cart 類別 -&gt; Extract Order Class</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">從 Cart 中把 methods 抽取放進另一個類別 <span class="string">"Order"</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Order</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 設定訂單資訊       -&gt; 訂單的事</span></span><br><span class="line">    <span class="comment">// 取得 ATM 付款資訊  -&gt; 訂單的事</span></span><br><span class="line">    <span class="comment">// 設定物流          -&gt; 訂單的事</span></span><br><span class="line">    <span class="comment">// 儲存訂單          -&gt; 訂單的事</span></span><br><span class="line">    <span class="comment">// 寄送訂單確認信     -&gt; 訂單or寄信的事</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>重構後的 Cart class</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cart</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Add item</span></span><br><span class="line">    <span class="comment">// Remove item</span></span><br><span class="line">    <span class="comment">// Get all items</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在設計階段就可以避開類別職責太大的問題 ex: 串金流、訂單、運送、購物車、折扣優惠</p>
</li>
<li>小心維護階段又讓類別的職責變多</li>
</ul>
<h3 id="2-_OCP_-_開放/關閉原則_Open-Closed_Principle"><strong>2. OCP - 開放/關閉原則 Open-Closed Principle</strong></h3><p>軟體中的對象(類別、函數等等)，對於擴展是開放的，對於修改是封閉的。<br>白話：就像讓程式可以插入外掛而不用動到程式本身。 ex: 日本卡通中各種組合的機器人。</p>
<h4 id="秘訣-1">秘訣</h4><blockquote>
<ul>
<li>只考慮抽象層級的介面互動 ex: 新竹物流</li>
<li>把變化委託給其他類別處理 ex: 加入其他物流</li>
</ul>
</blockquote>
<h4 id="範例">範例</h4><p>購物車加入商品時有不同促銷活動的處理方式，而活動類型很難確定。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cart</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addItem</span><span class="params">(<span class="variable">$sn</span>, <span class="variable">$qty</span>)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 加入 Cart 之前的優惠判斷</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'99999'</span> == <span class="variable">$sn</span>) &#123;</span><br><span class="line">            <span class="comment">// 處理特別商品</span></span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="string">'99'</span> == <span class="variable">$sn</span>) &#123;</span><br><span class="line">            <span class="comment">// 處理活動商品</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 處理一般商品</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 真的加入購物車</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 加入 Cart 後的優惠判斷</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'99999'</span> == <span class="variable">$sn</span>) &#123;</span><br><span class="line">            <span class="comment">// 處理特別商品</span></span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="string">'99'</span> == <span class="variable">$sn</span>) &#123;</span><br><span class="line">            <span class="comment">// 處理活動商品</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 處理一般商品</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<ul>
<li>重構之後<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cart</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addItem</span><span class="params">(<span class="variable">$sn</span>, <span class="variable">$qty</span>)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 加入 Cart 之前的優惠判斷，讓 plugin 來處理</span></span><br><span class="line">        <span class="variable">$this</span>-&gt;plugin-&gt;beforeAdditem(<span class="variable">$item</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 真的加入購物車</span></span><br><span class="line">        <span class="variable">$this</span>-&gt;items[<span class="variable">$sn</span>] = <span class="variable">$item</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 加入 Cart 後的優惠判斷，讓 plugin 來處理</span></span><br><span class="line">        <span class="variable">$this</span>-&gt;plugin-&gt;afterAdditem(<span class="variable">$item</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="小提醒">小提醒</h4><blockquote>
<ul>
<li>不是所有程式都需要 OCP</li>
<li>可能一開始沒考慮到擴充，但可以之後再透過重構完成。</li>
<li>不要過度繼承，讓子類別得到太多不需要的功能</li>
</ul>
</blockquote>
<h3 id="3-_LSP_-_里氏替換原則_Liskov_Substitution_Principle"><strong>3. LSP - 里氏替換原則 Liskov Substitution Principle</strong></h3><p>所有參照基礎類別的地方，必須可以透明地使用衍生類別的物件代而不需要任何改變。<br>白話：所有使用父類別的地方也要對子類別一視同仁</p>
<blockquote>
<p>Ex: 王子騎「馬」<br>王子騎「白馬」 -&gt; 符合 LSP，可取代父類別，白馬當成參數來用？<br>王子騎「黑馬」 -&gt; 符合 LSP<br>王子騎「斑馬」 -&gt; 斑馬也是馬，但不能被騎</p>
</blockquote>
<h4 id="秘訣-2">秘訣</h4><blockquote>
<ul>
<li>Design by Contract</li>
<li>方法簽名(method signature)、回傳值、丟出的異常(Exception) 要一致。</li>
<li>PHP 回傳值不能限定型態(data type)，要 php 7 以後才行</li>
<li>PHP 5.X 靠 docblock 的 annotation 來約束</li>
</ul>
</blockquote>
<h4 id="範例-1">範例</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CartController</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 新增 item</span></span><br><span class="line">        <span class="comment">// 如果該 item 不能被加入購物車，則丟出 Error 500</span></span><br><span class="line">        <span class="comment">// 不然就導向購物車首頁</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cart</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 新增 item</span></span><br><span class="line">        <span class="comment">// 加成功就 return true，失敗就 return false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="範例(反例)">範例(反例)</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CartController</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 新增 item</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addItem</span><span class="params">(<span class="variable">$sn</span>, <span class="variable">$qty</span>)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 如果該 item 不能被加入購物車，則丟出 Error 500</span></span><br><span class="line">        <span class="comment">// 不然就導向購物車首頁</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EventCart</span> <span class="keyword">extends</span> <span class="title">Cart</span> </span>&#123; <span class="comment">// 繼承之前的 Cart，但是是特別針對這次活動商品設計不同邏輯</span></span><br><span class="line">    <span class="comment">// 新增 item</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addItem</span><span class="params">(<span class="variable">$sn</span>, <span class="variable">$qty</span>)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 加成功就 return true</span></span><br><span class="line">        <span class="comment">// 失敗就 die('非活動商品')</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在回傳值型別上違反 LSP，EventCart 繼承了 Cart，所以 “新增Item” 行為應該要跟之前 Cart 一樣，回傳 true/false 啊！不然程式怎麼掛的都不知道，這種情況特別是不同的人維護同一份 Code 要新增功能的時候。</p>
<h4 id="小提醒-1">小提醒</h4><blockquote>
<p>白馬王子騎白馬，父類不能取代子類。<br>拋棄繼承，改用組合方式</p>
</blockquote>
<h3 id="3-2-_LKP_-_最小知識原則_Least_Knowledge_Principle_(a-k-a_迪米特法則_Law_of_Demeter)"><strong>3-2. <em>LKP</em> - 最小知識原則 Least Knowledge Principle (a.k.a 迪米特法則 Law of Demeter)</strong></h3><p>盡可能減少類別中的 public method，降低其他類別對此類別的耦合。<br>把一件完整的事情封裝起來！<br>ex: 不要讓 Controller 知道太多操作的細節</p>
<h4 id="範例-2">範例</h4><ul>
<li><p>重構前</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CartController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkout</span><span class="params">(<span class="variable">$sn</span>, <span class="variable">$payment</span>, <span class="variable">$shipment</span>)</span> </span>&#123;</span><br><span class="line">        <span class="variable">$order</span> = <span class="keyword">new</span> Order(<span class="variable">$sn</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$order</span>-&gt;setPayment(<span class="variable">$payment</span>);</span><br><span class="line">        <span class="variable">$order</span>-&gt;setShipment(<span class="variable">$shipment</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ( <span class="variable">$order</span>-&gt;save() ) &#123;</span><br><span class="line">            <span class="variable">$order</span>-&gt;sendMail();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>重構後</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Order</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkout</span><span class="params">(<span class="variable">$payment</span>, <span class="variable">$shipment</span>)</span> </span>&#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;setPayment(<span class="variable">$payment</span>);</span><br><span class="line">        <span class="variable">$this</span>-&gt;setShipment(<span class="variable">$shipment</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ( <span class="variable">$this</span>-&gt;save() ) &#123;</span><br><span class="line">            <span class="variable">$this</span>-&gt;sendMail();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CartController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkout</span><span class="params">(<span class="variable">$payment</span>, <span class="variable">$shipment</span>)</span> </span>&#123;</span><br><span class="line">        <span class="variable">$order</span> = <span class="keyword">new</span> Order(<span class="variable">$sn</span>);</span><br><span class="line">        <span class="variable">$order</span>-&gt;checkout(<span class="variable">$payment</span>, <span class="variable">$shipment</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="4-_ISP_-_介面隔離原則_Interface_Segregation_Principle"><strong>4. ISP - 介面隔離原則 Interface Segregation Principle</strong></h3><blockquote>
<p>Ex: 購物車寄信</p>
</blockquote>
<ul>
<li><p>重構前</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mailer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">send</span><span class="params">(IOrder <span class="variable">$order</span>)</span> </span>&#123;</span><br><span class="line">        <span class="variable">$mail</span> = <span class="variable">$order</span>-&gt;getReceiverMail();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Order</span> <span class="keyword">implements</span> <span class="title">IOrder</span> </span>&#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Message</span> <span class="keyword">implements</span> <span class="title">IOrder</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getMail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$this</span>-&gt;user-&gt;mail;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getOrderNumber</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 這個是 IOrder 裡定義要實作的，但 Message 中用不到，只好放一個空的 method</span></span><br><span class="line">        <span class="comment">// 違反 ISP 原則，不應該在 class 實作用不到的介面方法</span></span><br><span class="line">        <span class="comment">// 而應該要把介面方法再做細分，拆成兩個介面</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>重構後</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mailer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">send</span><span class="params">(Mailable <span class="variable">$target</span>)</span> </span>&#123; <span class="comment">// 只實作 Mailable 介面就好</span></span><br><span class="line">        <span class="variable">$mail</span> = <span class="variable">$target</span>-&gt;getMail(); <span class="comment">// 取代之前 getReceiverMail(); 的功能</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Mailable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getMail</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Order</span> <span class="keyword">implements</span> <span class="title">Mailable</span>, <span class="title">IOrder</span> </span>&#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Message</span> <span class="keyword">implements</span> <span class="title">Mailable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getMail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$this</span>-&gt;user-&gt;mail;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="5-_DIP_-_依頼反轉原則_Dependency_Inversion_Principle"><strong>5. DIP - 依頼反轉原則 Dependency Inversion Principle</strong></h3><blockquote>
<p>Ex: 用 iPhone 跟家人通話 (依頼 iPhone 實作)<br>Ex: 用 手機 跟家人通話 (不依頼 iPhone 實作，只要實作「手機」介面就行了)</p>
</blockquote>
<h4 id="秘訣-3">秘訣</h4><blockquote>
<p>互動的部份交給抽象類別或介面<br>會改變的實作放到子類別</p>
</blockquote>
<h4 id="範例-3">範例</h4><p>Ex: 原本只有 ATM 一種付款方式，但寫死了。萬一要換能信用卡付款怎麼辦？</p>
<ul>
<li><p>重構前</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">class Order &#123;</span><br><span class="line">    public function checkout() &#123;</span><br><span class="line">        <span class="variable">$atm</span> = new ATM();</span><br><span class="line">        <span class="variable">$atm-</span>&gt;pay();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">會賺錢的程式，沒有新需求要改 ===&gt; 不用理他(不用重構)！</span><br></pre></td></tr></table></figure>
</li>
<li><p>重構後，抽取 PaymentInterface，不要依頼 ATM 類的實作</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">PaymentInterface</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">pay</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Order</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkout</span><span class="params">(PaymentInterface <span class="variable">$payment</span>)</span> </span>&#123;</span><br><span class="line">        <span class="variable">$payment</span>-&gt;pay();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="SOLID_講的是同一件事"><strong>SOLID 講的是同一件事</strong></h2><blockquote style="font-size: 2.5em; text-align: center;"><br>    面對原始碼改變的策略<br><br></blockquote>

<pre><code>-<span class="ruby"> <span class="constant">SRP</span><span class="symbol">:</span> 降低單一類別被「改變」所影響的機會。
</span>-<span class="ruby"> <span class="constant">OCP</span><span class="symbol">:</span> 讓類別不會因為新增需求而改變
</span>-<span class="ruby"> <span class="constant">LSP</span><span class="symbol">:</span> 避免繼承時子類別所造成的「行為改變」
</span>-<span class="ruby"> <span class="constant">LKP</span><span class="symbol">:</span> 避免曝露過多資訊造成用戶端因流程調整而改變
</span>-<span class="ruby"> <span class="constant">ISP</span><span class="symbol">:</span> 降低用戶因不相關介面而被改變
</span>-<span class="ruby"> <span class="constant">DIP</span><span class="symbol">:</span> 避免高階程式因為低階程式變而改變</span>
</code></pre><h2 id="為什麼還是要有設計模式">為什麼還是要有設計模式</h2><ul>
<li>解決問題的經驗</li>
<li>黑話，節省溝通成本</li>
</ul>
<h2 id="PHP_常見的模式">PHP 常見的模式</h2><h3 id="Strategy_Pattern_策略模式"><strong>Strategy Pattern 策略模式</strong></h3><pre><code>- 同一個行為有數種方案可以選擇，讓使用者在執行階段再決定用哪一種方案。
- Ex: 出現 switch 的地方，不斷 <span class="keyword">if</span>/elseif/<span class="keyword">else</span> 的地方
- Ex: 計算運費，但參數可以丟入不同物流
- 秘訣：提取介面，實作不同物流類別，實作同一個計算運費的方法 getFee()，注入介面到計算運費的 <span class="function"><span class="keyword">method</span></span>
</code></pre><h3 id="Simple_Factory_Method_Pattern_簡單工廠模式"><strong>Simple Factory Method Pattern 簡單工廠模式</strong></h3><pre><code>- 秘訣：捨棄使用 new 的誘惑、用獨立的工廠類別負責做 <span class="string">"new"</span> 這件事，之後新增時不必動到原程式，改工廠類別即可。
- 重構<span class="number">2</span>：利用 PHP 特性，加 class_exists(<span class="variable">$shipmentName</span>), <span class="keyword">return</span> new <span class="variable">$shipmentName</span>;
</code></pre><h3 id="Adapter_Patern_轉接器模式"><strong>Adapter Patern 轉接器模式</strong></h3><pre><code>-<span class="ruby"> 例如依頼第三方的 <span class="constant">API</span>
</span>-<span class="ruby"> 秘訣：先將實作的程式碼改成抽象介面、實作 <span class="constant">Adapter</span> 類別來滿足介面。
</span>-<span class="ruby"> <span class="constant">Ex</span><span class="symbol">:</span> 信用卡付款的套件是廠商提供的，你直接拿來用，但之後有另一家的 <span class="constant">ATM</span> 付款套件提供過來怎麼整合付款？
</span>-<span class="ruby"> <span class="constant">Sol</span><span class="symbol">:</span> 提取 <span class="constant">IPayment</span> 介面，封裝舊物件，用 deligate 的方式，把不相容的新付款套件方法封裝在介面方法裡。</span>
</code></pre><h3 id="Decorator_Pattern_裝飾者模式"><strong>Decorator Pattern 裝飾者模式</strong></h3><pre><code>- 秘訣：
    <span class="number">1.</span> 解開目前的繼承關係順序
    <span class="number">2.</span> 依頼在方法較少的介面
    <span class="number">3.</span> 不是外加方法，而是在現有方法上加入新的邏輯。(不會新增方法)
- Ex: 取得 item price 方法 getPrice()
</code></pre><h4 id="範例-4">範例</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cart</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addItem</span><span class="params">(IItem <span class="variable">$item</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">IItem</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getPrice</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AbstractItem</span> <span class="keyword">implements</span> <span class="title">IItem</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(Item <span class="variable">$item</span>)</span> </span>&#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;item = <span class="variable">$item</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getPrice</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$this</span>-&gt;item-&gt;getPrice();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpecialItem</span> <span class="keyword">extends</span> <span class="title">AbstractItem</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getPrice</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="variable">$price</span> = <span class="variable">$this</span>-&gt;item-&gt;getPrice</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$price</span> &gt; <span class="number">2000</span>) &#123;</span><br><span class="line">            <span class="variable">$price</span> -= <span class="number">200</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$price</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DiscountItem</span> <span class="keyword">extends</span> <span class="title">AbstractItem</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getPrice</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="variable">$price</span> = <span class="variable">$this</span>-&gt;item-&gt;getPrice</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ( in_array(<span class="variable">$this</span>-&gt;item, <span class="variable">$discountItemList</span>) ) &#123;</span><br><span class="line">            <span class="variable">$price</span> = <span class="variable">$price</span> * <span class="number">0.8</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$price</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$item</span> = <span class="keyword">new</span> SpecialItem(</span><br><span class="line">    <span class="keyword">new</span> DiscountItem(</span><br><span class="line">        <span class="keyword">new</span> Item(<span class="variable">$sn</span>)</span><br><span class="line">    )</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="variable">$cart</span>-&gt;addItem(<span class="variable">$item</span>);</span><br></pre></td></tr></table></figure>
<h3 id="Chain_of_Responsibility_Pattern_責任鍊"><strong>Chain of Responsibility Pattern 責任鍊</strong></h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cal</span> = (<span class="keyword">new</span> Rule1_Calculator)</span><br><span class="line">    -&gt;setNext(<span class="keyword">new</span> Rule2_Calculator)</span><br><span class="line">    -&gt;setNext(<span class="keyword">new</span> Rule3_Calculator)</span><br><span class="line">    -&gt;setNext(<span class="keyword">new</span> Rule4_Calculator)</span><br><span class="line"></span><br><span class="line"><span class="variable">$price</span> = <span class="variable">$cart</span>-&gt;calculate(<span class="variable">$cal</span>);</span><br></pre></td></tr></table></figure>
<h3 id="複合模式"><strong>複合模式</strong></h3><pre><code>- Ex: MVC 就用到 <span class="keyword">Strategy </span>模式、Observer 模式、Composite 模式
</code></pre><h3 id="書單"><strong>書單</strong></h3><blockquote>
<ul>
<li>物件導向設計模式 (經典)</li>
<li>大話設計模式</li>
<li>深入淺出設計模式</li>
<li>設計模式之禪</li>
<li>PHP 設計模式學習手冊</li>
</ul>
<p>看鐵大釋出的投影片吧： <a href="http://slides.com/jaceju/design-patterns-by-examples/#/32" target="_blank" rel="external">其他模式請自行參考相關書籍</a></p>
</blockquote>
<h2 id="是不是一定要套用模式？">是不是一定要套用模式？</h2><ul>
<li>你有機會用錯模式</li>
<li>不要硬套</li>
<li>黃金鎚子 - 設計模式告訴我們怎麼做比較好，但有時候我們可能要知道「別怎麼做」比較好。</li>
</ul>
<blockquote style="font-size: 1.8em; text-align: center;"><br>    <b style="font-size: 2.05em">只要遵守 SOLID</b><br>    是否實作設計模式<br>    就不是那麼重要了<br><br></blockquote>

<ul>
<li>利用重構讓模式自然出現</li>
</ul>
<h1 id="Reference_參考連結">Reference 參考連結</h1><ul>
<li>鐵哥：設計模式簡報 <a href="http://slides.com/jaceju/design-patterns-by-examples/#/" target="_blank" rel="external">從實例學設計模式 by Jace Ju</a></li>
<li>鐵哥：購物車架構簡報！ <a href="http://www.slideshare.net/jaceju/ss-6312192" target="_blank" rel="external">購物車程式架構簡介</a></li>
</ul>
<p><br><br></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="About_Jace_Ju_大澤木小鐵">About Jace Ju 大澤木小鐵</h2><p>KKBOX 網站工程師<br>為了訓練公司內部人員設計模式的基本教學</p>
<h2 id="Agenda">Agenda</h2><ul>
<li>OO 常見問題</]]>
    </summary>
    
      <category term="PHP也有Day" scheme="http://blog.dj1020.net/tags/PHP%E4%B9%9F%E6%9C%89Day/"/>
    
      <category term="筆記" scheme="http://blog.dj1020.net/tags/%E7%AD%86%E8%A8%98/"/>
    
      <category term="設計模式" scheme="http://blog.dj1020.net/tags/%E8%A8%AD%E8%A8%88%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="程式筆記" scheme="http://blog.dj1020.net/categories/%E7%A8%8B%E5%BC%8F%E7%AD%86%E8%A8%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo 添加 RSS]]></title>
    <link href="http://blog.dj1020.net/Hexo-%E6%B7%BB%E5%8A%A0-RSS/"/>
    <id>http://blog.dj1020.net/Hexo-添加-RSS/</id>
    <published>2015-09-24T02:13:34.000Z</published>
    <updated>2015-09-24T02:37:44.000Z</updated>
    <content type="html"><![CDATA[<h2 id="添加_RSS">添加 RSS</h2><ol>
<li><p>安裝 RSS plugin</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="operator"><span class="keyword">install</span> hexo-generator-feed <span class="comment">--save</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p><del>在 _config.yml 裡使用 RSS plugin</del>  這個不用，加了反而不能用。</p>
</li>
<li><p>在 … 設定 Rss: /atom.xml，以 Jacman 來說，預設就設好了</p>
</li>
<li><p>參考 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="external">hexo-generator-feed的github說明</a>，在 _config.yml 設定：</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">feed</span>:</span><br><span class="line">  <span class="attribute">type</span>: atom</span><br><span class="line">  <span class="attribute">path</span>: atom.xml</span><br><span class="line">  <span class="attribute">limit</span>: <span class="number">20</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>重新 generate 頁面和 RSS feed <code>$ hexo clean &amp;&amp; hexo generate</code></p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="添加_RSS">添加 RSS</h2><ol>
<li><p>安裝 RSS plugin</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line"]]>
    </summary>
    
      <category term="Bootstrap" scheme="http://blog.dj1020.net/tags/Bootstrap/"/>
    
      <category term="Hexo" scheme="http://blog.dj1020.net/tags/Hexo/"/>
    
      <category term="Hexo 筆記" scheme="http://blog.dj1020.net/categories/Hexo-%E7%AD%86%E8%A8%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo Jacman 主題換作者頭像照片、Logo、FavIcon]]></title>
    <link href="http://blog.dj1020.net/Hexo-Jacman-%E4%B8%BB%E9%A1%8C%E6%8F%9B%E4%BD%9C%E8%80%85%E9%A0%AD%E5%83%8F%E7%85%A7%E7%89%87/"/>
    <id>http://blog.dj1020.net/Hexo-Jacman-主題換作者頭像照片/</id>
    <published>2015-09-24T00:59:14.000Z</published>
    <updated>2015-09-24T02:33:57.000Z</updated>
    <content type="html"><![CDATA[<h2 id="找到_Jacman_主題設定檔__config-yml">找到 Jacman 主題設定檔 _config.yml</h2><p>說來也蠻容易的，就是找到主題設定檔，位置在 themes/jacman/_config.yml 約 line 32 行的位置，<br>裡面還可以換 logo, favicon, 和 img folder，還有 banner，目前 banner 預設是沒有。</p>
<figure class="highlight bash"><figcaption><span>&#123;Hexo安裝資料夾&#125;/themes/jacman/_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#### Image</span></span><br><span class="line">imglogo:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span>             <span class="comment">## display image logo true/false.</span></span><br><span class="line">  src: img/logo.png        <span class="comment">## `.svg` and `.png` are recommended,please put image into the theme folder `/jacman/source/img`.</span></span><br><span class="line">favicon: img/favicon.ico   <span class="comment">## size:32px*32px,`.ico` is recommended,please put image into the theme folder `/jacman/source/img`.</span></span><br><span class="line">apple_icon: img/jacman.jpg <span class="comment">## size:114px*114px,please put image into the theme folder `/jacman/source/img`.</span></span><br><span class="line">author_img: img/author.jpg <span class="comment">## size:220px*220px.display author avatar picture.if don't want to display,please don't set this.</span></span><br><span class="line">banner_img: <span class="comment">#img/banner.jpg ## size:1920px*200px+. Banner Picture</span></span><br><span class="line"><span class="comment">### Theme Color</span></span><br><span class="line">theme_color:</span><br><span class="line">    theme: <span class="string">'#673D88'</span>    <span class="comment">##the defaut theme color is blue</span></span><br></pre></td></tr></table></figure>
<p>然後把 <code>author_img: img/author.jpg</code> 取代掉就可以了，或是指定另一個位置。</p>
<p><code>author.jpg</code> 位置在 <code>{Hexo安裝資料夾}/themes/jacman/source/img/author.jpg</code></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="找到_Jacman_主題設定檔__config-yml">找到 Jacman 主題設定檔 _config.yml</h2><p>說來也蠻容易的，就是找到主題設定檔，位置在 themes/jacman/_config.yml 約 line 32 行的位置，<br>裡]]>
    </summary>
    
      <category term="Bootstrap" scheme="http://blog.dj1020.net/tags/Bootstrap/"/>
    
      <category term="Hexo" scheme="http://blog.dj1020.net/tags/Hexo/"/>
    
      <category term="Hexo 筆記" scheme="http://blog.dj1020.net/categories/Hexo-%E7%AD%86%E8%A8%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo 3.0 發佈，閃亮亮安裝步驟小筆記]]></title>
    <link href="http://blog.dj1020.net/Hexo-%E9%96%83%E4%BA%AE%E4%BA%AE%E5%AE%89%E8%A3%9D%E6%AD%A5%E9%A9%9F%E5%B0%8F%E7%AD%86%E8%A8%98/"/>
    <id>http://blog.dj1020.net/Hexo-閃亮亮安裝步驟小筆記/</id>
    <published>2015-09-23T01:20:51.000Z</published>
    <updated>2015-09-24T02:08:43.000Z</updated>
    <content type="html"><![CDATA[<h2 id="從無到有_Hexo_3-0_在_GitHub_發佈流程，還有踩雷心得和解法">從無到有 Hexo 3.0 在 GitHub 發佈流程，還有踩雷心得和解法</h2><p>因為平常就有用 npm 和 git 所以這兩部份的安裝流程沒在裡面</p>
<ol>
<li><p>把 npm 和 git 裝好</p>
<ul>
<li>brew install npm</li>
<li>git (Mac 內建)</li>
</ul>
</li>
<li><p><code>$ npm install -g hexo-cli</code></p>
</li>
<li><p><code>$ hexo init hexo</code></p>
</li>
<li><p><code>$ cd hexo</code></p>
</li>
<li><p><code>$ npm install</code></p>
</li>
<li><p>設定 _config.yml</p>
</li>
<li><p>下載 <a href="https://github.com/wuchong/jacman" target="_blank" rel="external">jacman 佈景主題</a></p>
<ul>
<li><code>$ git clone https://github.com/wuchong/jacman.git themes/jacman</code></li>
<li>把 _config.yml 的 themes 設成 jacman</li>
</ul>
</li>
<li><p>建立這一篇文章</p>
<ul>
<li><code>$ hexo new &quot;Hexo 閃亮亮安裝步驟小筆記&quot;</code></li>
</ul>
</li>
<li><p>編輯 hexo/source/_posts/Hexo-閃亮亮安裝步驟小筆記.md</p>
</li>
<li><p>產生網頁 <code>$ hexo generate</code></p>
</li>
<li><p>打開 server 看一下效果 <code>$ hexo server</code>，開 <a href="http://0.0.0.0:4000/" target="_blank" rel="external">http://0.0.0.0:4000/</a></p>
</li>
<li><p>試試看 deploy <code>$ hexo deploy -g</code> (部署網站前先產生靜態檔案)</p>
</li>
<li><p>發現沒效，原來是要在 _config.yml 設 deploy 參數，參考這一篇: <a href="http://eva0919.github.io/2013/04/21/%E4%BD%BF%E7%94%A8hexo%E4%BB%A5%E5%8F%8Agithub-page%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E9%83%A8%E8%90%BD%E6%A0%BC/" target="_blank" rel="external">使用hexo以及github page建立自己的部落格</a></p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: github</span><br><span class="line">  <span class="attribute">repository</span>: <span class="attribute">https</span>:<span class="comment">//github.com/你的帳號/你的帳號.github.com.git</span></span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure>
<p>【重要】 閃亮亮先去 github 建一個 repo，但因為建錯 repo 名字，所以沒有頁面可以看……，記得建 repo 的時候一定要用 username.github.io 才會被 github 當成一個靜態頁網站。</p>
</li>
<li><p>再 deploy 一次試試看 <code>$ hexo deploy -g</code></p>
</li>
<li><p>結果出現：</p>
<figure class="highlight monkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ERROR</span> Deployer <span class="keyword">not</span> found: github</span><br></pre></td></tr></table></figure>
</li>
<li><p>來去 google 找解，找到：</p>
<blockquote>
<p>1) <a href="http://ogeeker.com/2015/03/14/Hexo-Deployer-not-found-github/" target="_blank" rel="external">Hexo Deployer not found: github</a><br>2) <a href="https://www.v2ex.com/t/175940" target="_blank" rel="external">搭建 hexo，在執行 hexo deploy 後,出現 error deployer not found:github 的錯誤</a><br>3) <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Hexo deploy 官方文件</a></p>
</blockquote>
<p>Hexo 3.0 開始 type 要改成 git，還有 repository 換成 repo，而且聽說新的 repo 是不能 deploy 上去的，要先自己  push 一個 commit，但說真的我不知道一開始 commit 要推什麼上去，先這樣好了：</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>git init</span><br><span class="line"><span class="variable">$ </span>git add .gitignore</span><br><span class="line"><span class="variable">$ </span>git commit -m <span class="string">"init commit"</span></span><br><span class="line"><span class="variable">$ </span>git remote add origin <span class="symbol">https:</span>/<span class="regexp">/github.com/</span>你的帳號/你的帳號.github.com.git</span><br><span class="line"><span class="variable">$ </span>git push -u origin master</span><br></pre></td></tr></table></figure>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">repo</span>: <span class="attribute">https</span>:<span class="comment">//github.com/你的帳號/你的帳號.github.com.git</span></span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure>
</li>
<li><p>再試一次 deploy <code>$ hexo deploy -g</code>，還是</p>
<figure class="highlight monkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ERROR</span> Deployer <span class="keyword">not</span> found: git</span><br></pre></td></tr></table></figure>
</li>
<li><p>不死心，再查 google 大神</p>
<blockquote>
<p>1) <a href="https://github.com/hexojs/hexo/issues/1040#issuecomment-109291766" target="_blank" rel="external">ERROR Deployer not found: github #1040</a></p>
</blockquote>
<p>說要手動在 hexo 專案資料夾下安裝 <code>npm install hexo-deployer-git --save</code></p>
</li>
<li><p>裝完再試一次 <code>$ hexo deploy -g</code>，成功！推上去了，但是要去哪裡看我的站呢？</p>
</li>
<li><p>慘劇，原來建 repo 的時候一定要用 username.github.io 才會被當成一個 page，那就重建 repo 吧</p>
<blockquote>
<p>引用： <a href="http://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="external">如何搭建一個獨立博客——簡明Github Pages與Hexo教程</a></p>
<p>使用GitHub Pages建立博客與GitHub建立好鏈接之後，就可以方便的使用它提供的Pages服務，GitHub Pages分兩種，一種是你的GitHub用戶名建立的 username.github.io 這樣的用戶&amp;組織頁（站），另一種是依附項目的pages。<br>想建立個人博客是用的第一種，形如cnfeat.github.io這樣的可訪問的站，每個用戶名下面只能建立一個。</p>
</blockquote>
</li>
<li><p>去 github 發現不用重建，改 repo 名字就好了，然後再重新 deploy 一次 <code>$ hexo deploy -g</code></p>
</li>
<li><p>嘿嘿！終於成功了吧~ <a href="http://dj1020.github.io/" target="_blank" rel="external">閃亮亮大師之路</a> 開張，底下那個 theme 作者的頭像要改一下。</p>
</li>
</ol>
<h2 id="待辦清單">待辦清單</h2><ul>
<li>增加 RSS 功能</li>
<li>發現 ol 後面的 ul 應該要是一個點，但樣式不對，看是語法要調整還是怎樣。</li>
<li>RWD 時要把文章目錄隱藏</li>
<li>綁定到自訂網域 blog.dj1020.net</li>
<li>在 sublime 設定自動 deploy 快速鍵</li>
<li>也許弄個 Bulk Mailer 例如 MailChimp</li>
<li>把下面的微博分享什麼的拿掉</li>
<li>學怎麼改 Menu</li>
<li>調整 Search 功能，如 demo 一樣 <a href="http://wuchong.me/jacman/search/index.html?q=%E4%B8%BB%E9%A1%8C" target="_blank" rel="external">Demo</a>，或是用點燈坊的外掛</li>
<li>瀏覽文章時預設顯示文章目錄在右側，分類 block 在下面</li>
<li>加 FavIcon (Done 9/24/2015)</li>
<li>改 theme 作者頭像，小改一下配色 (Done 9/24/2015)</li>
<li>學怎麼用 Categories (Done 9/24/2015)</li>
<li>日期 desc sort (其實是預設的)</li>
<li>設定 Read More 模式 (Done 9/24/2015)</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="從無到有_Hexo_3-0_在_GitHub_發佈流程，還有踩雷心得和解法">從無到有 Hexo 3.0 在 GitHub 發佈流程，還有踩雷心得和解法</h2><p>因為平常就有用 npm 和 git 所以這兩部份的安裝流程沒在裡面</p>
<ol>
<li><]]>
    </summary>
    
      <category term="Bootstrap" scheme="http://blog.dj1020.net/tags/Bootstrap/"/>
    
      <category term="Hexo" scheme="http://blog.dj1020.net/tags/Hexo/"/>
    
      <category term="Install" scheme="http://blog.dj1020.net/tags/Install/"/>
    
      <category term="Hexo 筆記" scheme="http://blog.dj1020.net/categories/Hexo-%E7%AD%86%E8%A8%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://blog.dj1020.net/hello-world/"/>
    <id>http://blog.dj1020.net/hello-world/</id>
    <published>2015-09-23T01:10:51.000Z</published>
    <updated>2015-09-24T01:02:40.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
</feed>
